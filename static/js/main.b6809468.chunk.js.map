{"version":3,"sources":["App.js","index.js"],"names":["LeftButton","styled","Button","LargerContent","Content","MyIconButton","IconButton","App","useState","index","setIndex","day","setDay","playing","setPlaying","imgLoaded","setImgLoaded","useQuery","fetch","then","response","json","loading","data","isLoading","isSuccess","isError","error","isFetching","useEffect","timer","window","setInterval","photos","length","clearInterval","className","style","width","onClick","text","float","display","lineHeight","align","centerContent","PrimaryButton","center","icon","type","Heading","headingType","level","src","img_src","alt","onLoad","queryClient","QueryClient","console","log","process","NASA_KEY","ReactDOM","render","StrictMode","QueryClientProvider","client","theme","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.b6809468.chunk.js","sourcesContent":["import './App.css';\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport {useQuery, useQueryClient} from \"react-query\";\r\nimport {\r\n    PrimaryButton,\r\n    Heading,\r\n    HEADING_LEVELS,\r\n    HEADING_TYPES,\r\n    Content,\r\n    IconArrowForward,\r\n    IconButton,\r\n    IconArrowBack, Button, centerContent\r\n} from \"cdk-radial\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NASA_KEY=''; //See https://api.nasa.gov/\r\n\r\nconst LeftButton = styled(Button)`float: left; margin: 5px`\r\nconst LargerContent = styled(Content)`font-size: 50px; display: inline`;\r\nconst MyIconButton = styled(IconButton)`margin-top: 0px; margin-outside: 200px; border-color: #000000; border-width: 4px`;\r\n\r\nfunction App() {\r\n    const [index, setIndex] = useState(0);\r\n    const [day, setDay] = useState(22);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [imgLoaded, setImgLoaded] = useState(false);\r\n    const {loading, data, isLoading, isSuccess, isError, error,isFetching } = useQuery(['rover', day], () => {\r\n        return fetch('https://api.nasa.gov/mars-photos/api/v1/rovers/perseverance/photos' +\r\n            '?earth_date=2021-06-'+day+\r\n            '&api_key=' + NASA_KEY).then(response => response.json())\r\n    })\r\n\r\n    useEffect(() => {\r\n        const timer = window.setInterval(() => {\r\n            if(playing && imgLoaded) {\r\n                setImgLoaded(false);\r\n                setIndex((index + 1) % data?.photos?.length)\r\n            }\r\n        }, 100)\r\n        return () => {\r\n            window.clearInterval(timer);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"App\" style={{width: \"100%\"}}>\r\n            <LeftButton onClick ={() => {\r\n                setDay ((day-1 + 31)%31)\r\n                setIndex(0);\r\n            }} text=\"Previous Day\"/>\r\n            <div><Content style={{float: 'left', display: 'inline', lineHeight: '45px'}}>06/{day}/21</Content></div>\r\n            <LeftButton onClick ={() =>  {\r\n                setDay((day+1)%31)\r\n                setIndex(0);\r\n            }} text=\"Next Day\"/>\r\n            <div align={centerContent}>\r\n                <PrimaryButton style={{center: '-10px'}} onClick={() => setPlaying(!playing)} text=\"Play/Pause\"/>\r\n                <MyIconButton onClick ={() => setIndex(((index-1 + data?.photos?.length) ?? 0)%((data?.photos?.length) ?? 1))} icon={<IconArrowBack/>} text=\"Previous\"/>\r\n                <LargerContent type=\"body-2\">{index ?? 0}</LargerContent>\r\n                /{data?.photos?.length ?? 0}\r\n                <MyIconButton onClick ={() => setIndex((index+1)%data?.photos?.length)} icon={<IconArrowForward/>} text=\"Next\"/>\r\n            </div>\r\n            <Heading headingType=\"display-1\" level={1}>{(loading || isLoading ) && \"Loading...\"}</Heading>\r\n            {(isSuccess && !isLoading) && <img src={data?.photos[index]?.img_src} alt=\"Error\" onLoad={() => setImgLoaded(true)}/>}\r\n            {isError && \"\" + error}\r\n        </div>\r\n    );\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {QueryClient, QueryClientProvider} from \"react-query\";\r\nimport {ReactQueryDevtools} from \"react-query/devtools\";\r\nimport { ThemeProvider} from \"styled-components\";\r\nimport { theme} from \"cdk-radial\";\r\nimport dotenv from \"dotenv\";\r\n\r\n\r\nconst queryClient = new QueryClient();\r\nconsole.log(process.env.NASA_KEY);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <QueryClientProvider client={queryClient}>\r\n          <ThemeProvider theme={theme} >\r\n              <App/>\r\n          </ThemeProvider>\r\n          <ReactQueryDevtools initialIsOpen={true}/>\r\n      </QueryClientProvider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}